package com.tpastushok.cosmocats.web.mapper;

import com.tpastushok.cosmocats.domain.product.Product;
import com.tpastushok.cosmocats.dto.product.ProductCreationDto;
import com.tpastushok.cosmocats.dto.product.ProductDto;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;

import java.util.List;

@Mapper(componentModel = "spring")
public interface ProductDtoMapper {
    List<ProductDto> toProductDto(List<Product> products);
    ProductDto toProductDto(Product product);

    /**
     * Maps ProductCreationDto to Product.
     *
     * Since ProductCreationDto does not contain an 'id' field (it is assumed that the 'id' will
     * be generated when creating the product), we manually generate a new UUID for the 'id' field
     * in the Product using 'UUID.randomUUID()'.
     *
     * This ensures that each new product has a unique identifier when it is created.
     *
     * This is particularly useful in the context of adding new products where the ID is typically
     * generated by the backend system and is not part of the creation input (which is the case here).
     */
    @Mapping(target = "id", expression = "java(java.util.UUID.randomUUID())")  // Generate a new UUID for the 'id' field
    Product toProduct(ProductCreationDto productDto);
}